apiVersion: v1
kind: Secret
metadata:
  name: mongosecret
  namespace: default
type: Opaque
data:
  username: c2lnbWE=
  password: UGhpZWYzbWU=

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mongo-db
  namespace: default
spec:
  selector:
    matchLabels:
      app: mongo-db
      tier: backend
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mongo-db
        tier: backend
    spec:
      containers:
      - name: mongodb
        image: docker.pkg.github.com/veerendra2/python-flask-mongodb-app/mongo-db:latest
        volumeMounts:
        - name: emptydir1
          mountPath: /data
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongosecret
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongosecret
              key: password
        ports:
        - name: mongodb
          containerPort: 27017
      volumes:
      - name: emptydir1
        emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: mongo-db
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
  selector:
      app: mongodb
      tier: backend

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: flask-app
  namespace: default
spec:
  selector:
    matchLabels:
      app: flask-app
      tier: frontend
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: flask-app
        tier: frontend
    spec:
      containers:
      - name: flask-app
        image: docker.pkg.github.com/veerendra2/python-flask-mongodb-app/flask-app:latest
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongosecret
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongosecret
              key: password
        ports:
        - name: http
          containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: flask-app
  namespace: default
spec:
  type: NodePort
  ports:
    - nodePort: 32242
      port: 80
      targetPort: 80
      protocol: TCP
  selector:
      app: flask-app
      tier: frontend
